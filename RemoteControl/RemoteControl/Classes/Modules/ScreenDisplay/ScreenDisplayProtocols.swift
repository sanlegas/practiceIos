//
//  ScreenDisplayProtocols.swift
//  RemoteControl
//
//  Created ISAAC DAVID SANTIAGO on 11/07/22.
//  Copyright © 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import Foundation

//MARK: Wireframe -
protocol ViewToPresenterScreenDisplayProtocol: class {
    var view: PresenterToViewScreenDisplayProtocol? {get set}
    var interactor: PresenterToInteractorScreenDisplayProtocol? {get set}
    var router: PresenterToRouterScreenDisplayProtocol? {get set}
    func getScreenFromIdDevice(idDevice:String,
                               success: @escaping(_ screen: Data) -> () ,
                               failure: @escaping() -> ())
    func handleScreenDevice(deviceId: String, lastUpdated: Any, success: @escaping (Data) -> (), failure: @escaping () -> ())
}
//MARK: Presenter -
protocol PresenterToViewScreenDisplayProtocol: class {

  
}

//MARK: Interactor -
protocol InteractorToPresenterScreenDisplayProtocol: class {

    /* Interactor -> Presenter */
}

protocol PresenterToInteractorScreenDisplayProtocol: class {
    var presenter : InteractorToPresenterScreenDisplayProtocol? { get set}

    func getScreenFromIdDevice(idDevice:String,
                               success: @escaping(_ screen: Data) -> () ,
                               failure: @escaping() -> ())
    
    func handleScreenDevice(deviceId: String,
                            lastUpdated: Any,
                            success: @escaping (_ screenCapture: Data) -> (),
                            failure: @escaping () -> ())
}

//MARK: View -
protocol PresenterToRouterScreenDisplayProtocol: class {


    /* Presenter -> ViewController */
}
